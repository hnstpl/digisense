@model AdminPortal.Mvc.Models.DIY.AddNewDIY

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //IEnumerable<DigisenseAdmin.Models.mst_diy_video_category_lang> VideoCategory = ViewBag.Videocategory == null ? null : ViewBag.Videocategory;
    //IEnumerable<DigisenseAdmin.Models.mst_language> LanguageList = ViewBag.LanguageList == null ? null : ViewBag.LanguageList;
    //IEnumerable<DigisenseAdmin.Models.mst_diy_videotypes> VideoTypeList = ViewBag.VideoTypeList == null ? null : ViewBag.VideoTypeList;
    //IEnumerable<DigisenseAdmin.Models.DIY.NewDIY> DIYList = ViewBag.Result == null ? null : ViewBag.Result;
}


@*Multi Select*@



<link rel="stylesheet" href="~/css/bootstrap-multiselect.css" />
<script src="~/js/bootstrap-multiselect.js"></script>
<link rel="stylesheet" href="~/css/CustomStyle.css" />


<ol class="breadcrumb page-breadcrumb">
    <li class="breadcrumb-item"><a href="../CustomerApplication/Home"><i class="fal fa-home mr-1 fs-md"></i>Home</a></li>
    <li class="breadcrumb-item"><i class="fal fa-image mr-1 fs-sm"></i>Do it Yourself</li>
    <li class="breadcrumb-item"><i class="subheader-icon fal fa-video mr-1 fs-sm"></i>Add DIY</li>
    <li class="position-absolute pos-top pos-right d-none d-sm-block"><span class="js-get-date"></span></li>
</ol>
<style>
    .select2-selection__arrow b {
        display: none !important;
    }

    .a-disable {
        pointer-events: none;
        cursor: default;
    }
</style>

@using (Html.BeginForm("Add", "DIY", FormMethod.Post, new { @id = "form1", novalidate = "", @class = "needs-validation" }))
{
    //
    <div class="modal fade" id="AddNewDIY_ForLanguage" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header pb-0">
                    <div class="panel bg-subtlelight-fade col-12 p-0 mb-0">
                        <div class="panel-hdr">
                            <h2>DIY Video</h2>
                            <div class="panel-toolbar float-right mr-2">
                            </div>
                            <div class="panel-toolbar float-right pr-2">
                                @*<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>*@
                                @*<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>*@
                                @*<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>*@
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true"><i class="fal fa-times"></i></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-body pt-0">
                    <div class="panel-container border-faded shadow-inset-1 pt-5">
                        <div class="panel-content">
                            <div class="row pl-lg-6 mb-4">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Video ID</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            <input class="form-control" data-val="true" disabled="disabled" type="text" value="" id="modal_VID">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row pl-lg-6 mb-4">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Applicable Languages*</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="form-group DIY-Language">
                                            @Html.DropDownList("ApplicableLanguage", Model.LanguageList.Select(x => new SelectListItem { Text = x.Text, Value = x.Value.ToString() }), new { @class = "form-control", id = "ApplicableLanguage", name = "ApplicableLanguage", Multiple = "Multiple" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*<div class="row pl-lg-6 mb-4">
                                    <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                        <label class="form-label pt-lg-2" for="VideoID">Video Type*</label>
                                    </div>
                                    <div class="col-lg-6 col-sm-12">
                                        <div class="col-lg-12">
                                            <div class="form-group">
                                                @Html.DropDownList("ApplicableLanguage", LanguageList.Select(x => new SelectListItem { Text = x.Language_Name, Value = x.ID.ToString() }), "Select Language(s)", new { @class = "custom-select", id = "ApplicableLanguage1", name = "ApplicableLanguage1", Multiple = "Multiple" })
                                            </div>
                                        </div>
                                    </div>
                                </div>*@
                            <div class="row pl-lg-6 mb-4" id="Video-Namelab">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Video Name*</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            @Html.TextBox("Video-Name", "", new { @class = "form-control" })
                                            <div class="invalid-feedback">VideoName is required.</div>
                                            @Html.Hidden("EditVideoId")
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row pl-lg-6 mb-4" id="Video-Descriptionlab">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Video Description*</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            @Html.TextBox("Video-Description", "", new { @class = "form-control" })
                                            <div class="invalid-feedback">VideoDescription is required.</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row pl-lg-6 mb-4" id="Video-Type">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Video Type*</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            @Html.DropDownList("VideoType", Model.VideoTypeList.Select(x => new SelectListItem { Text = x.Text, Value = x.Value.ToString() }), new { @class = "custom-select", id = "VideoType", name = "VideoType", @onchange = "VideoTypeChange(this.value)" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row pl-lg-6 mb-4" id="Video-Browse">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Video File*</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="frame-wrap">
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input" id="Video-File">
                                                <label class="custom-file-label" id="lblvideo" for="Video-File">Choose Video</label>
                                                <div class="invalid-feedback">Video is required.</div>
                                                <span id="spnimage" class="error" style="display: none; color:red;font-weight:bold"></span>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row pl-lg-6 mb-4" id="Video-URI" style="display:none">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Video Link*</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            @Html.TextBox("VideoURI", "", new { @class = "form-control" })
                                            <div class="invalid-feedback">Video Link is required.</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row pl-lg-6 mb-4" id="Video-Status">
                                <div class="col-lg-4 col-sm-12 pl-lg-6 align-middle">
                                    <label class="form-label pt-lg-2" for="VideoID">Video Status*</label>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            <div class="frame-wrap">
                                                <div class="custom-control custom-radio mb-1">
                                                    @Html.RadioButton("VideoStatus", "true", new { @class = "custom-control-input", @id = "Active", @readonly = true })
                                                    <label class="custom-control-label" for="Active">Active</label>
                                                </div>
                                                <div class="custom-control custom-radio mb-1">
                                                    @Html.RadioButton("VideoStatus", "false", new { @class = "custom-control-input", @id = "Inactive", @readonly = true })
                                                    <label class="custom-control-label" for="Inactive">Inactive</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary float-right waves-effect waves-themed ml-6" id="btn-add">Add</button>
                </div>
            </div>
        </div>
    </div>

    <div class="subheader">
        <div class="card col-12">
            <div class="row mt-2">
                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-3">
                    <h1 class="subheader-title mt-2 mb-2 pt-1">
                        <i class="subheader-icon fal fa-video"></i>
                        Add New Video
                    </h1>
                </div>
                @*<div class="form-group col-sm-12 col-md-12 col-lg-12 col-xl-9">
                        <div class="row mb-0">
                            <div class="col-xl-8"></div>
                            <div class="form-group col-sm-12 col-md-12 col-lg-5 col-xl-2 mb-0 mt-2 mb-2">

                                @Html.DropDownListFor(x => x.FilteredLanguageID, Model.LanguageList.Select(x => new SelectListItem { Text = x.Text, Value = x.Value.ToString() }), new { @class = "custom-select", id = "LanguageFilterList", name = "Languagelist" })
                            </div>
                            <div class="form-group col-sm-12 col-md-12 col-lg-2 col-xl-1 mb-0 mt-2 mb-2 ml-5 ml-md-0">
                                <button type="submit" value="Submit" class="btn btn-primary float-right" id="TipSearch" name="BannerSearch">Apply</button>
                            </div>
                        </div>
                    </div>*@
            </div>
            <div id="grid" class="row mt-2">
                <div class="col-12">
                    <div class="panel bg-subtlelight-fade mb-4">
                        <div class="panel-hdr">
                            <h2>Do it Yourself</h2>
                            <div class="panel-toolbar float-right mr-2">
                            </div>
                            <div class="panel-toolbar float-right pr-2">
                                @*<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>*@
                                @*<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>*@
                                @*<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>*@
                            </div>
                        </div>
                        <div class="panel-container show">
                            <div class="panel-content">
                                <div class="row pl-lg-6 mb-4">
                                    <div class="col-lg-3 col-sm-12 pl-lg-6 align-middle">
                                        @Html.LabelFor(x => x.CategoryID, "Select Video Category*", new { @class = "form-label pt-lg-2" })
                                    </div>
                                    <div class="col-lg-4 col-sm-12">
                                        <div class="col-lg-12">
                                            <div class="form-group">
                                                @Html.DropDownListFor(x => x.CategoryID, Model.Videocategorylist.Select(x => new SelectListItem { Text = x.Text, Value = x.Value.ToString() }), "Select Category", new { @class = "form-control", id = "TipCategoryFilterList", name = "TipCategoryList" })
                                                @*@Html.ValidationMessageFor(x => x.CategoryID)*@
                                                <div class="invalid-feedback" id="videoCategory">Video Category is required.</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row pl-lg-6 mb-4" id="video_area" style="display:none">
                                    <div class="col-lg-3 col-sm-12 pl-lg-6 align-middle">
                                        @Html.LabelFor(x => x.VideoID, "Video ID*", new { @class = "form-label pt-lg-2" })
                                    </div>
                                    <div class="col-lg-4 col-sm-12">
                                        <div class="col-lg-12">
                                            <div class="form-group text-right">
                                                @Html.TextBoxFor(x => x.VideoID, new { @class = "form-control", Required = "required", id = "VideoID", @readonly = true })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row pl-lg-6 mb-4">
                                    <div class="col-lg-3 col-sm-12 pl-lg-6 align-middle">
                                    </div>
                                    <div class="col-lg-4 col-sm-12">
                                        <div class="col-lg-12">
                                            <div class="form-group text-right" style="display:none">
                                                @Html.ActionLink("Generate Video ID", "", "", new { @class = "btn btn-primary float-right", id = "btn_create_videoID", @style = "display:none" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-content">
                                <div class="tab-content p-3">
                                    <div class="row float-right mt-1 mr-2">
                                        <div class="form-group">
                                            <button type="button" class="btn btn-primary float-right" data-toggle="modal" id="btnAddVideo" onclick="AddVideo()" data-target="#AddNewDIY_ForLanguage">Add</button>
                                            @*@Html.ActionLink("Add", "", "", new { @class = "btn btn-primary float-right", id = "btn_create_videoLanguage", @data - target = "#AddNewDIY_ForLanguage", @data - toggle = "modal" })*@
                                        </div>
                                    </div>
                                    <div class="">
                                        <table id="dt-diytemplate" class="table table-bordered table-hover table-striped w-100" role="grid" aria-describedby="dt-basic_info" style="display:none">
                                            <thead>
                                                <tr>
                                                    <td id="slno" class="text-center fw-500">Sl. No</td>
                                                    <td class="text-center fw-500">Video ID</td>
                                                    <td class="text-center fw-500">Video Language</td>
                                                    <td class="text-center fw-500">Video Name</td>
                                                    <td class="text-center fw-500">Video Description</td>
                                                    <td class="text-center fw-500">Video Type</td>
                                                    <td class="text-center fw-500">Video Location</td>
                                                    <td class="text-center fw-500">Video Status</td>
                                                    <td class="text-center fw-500">Edit</td>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                <tr class="contacts-record-template" style="display:none">
                                                    <td>1</td>
                                                    <td>
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].ID)
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].VideoStatus)
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].VideoId)
                                                        <span>@Model.newDIYTemplate[0].VideoId </span>
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].LanguageName)
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].LanguageID)
                                                        <span>@Model.newDIYTemplate[0].LanguageName </span>
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].VideoName)
                                                        <span>@Model.newDIYTemplate[0].VideoName </span>
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].VideoDescription)
                                                        <span>@Model.newDIYTemplate[0].VideoDescription </span>
                                                    </td>
                                                    <td class="text-center">
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].VideoTypeDescription)
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].VideoType)
                                                        <span>@Model.newDIYTemplate[0].VideoTypeDescription </span>
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(m => m.newDIYTemplate[0].VideoURI)
                                                        <span><a href="@Model.newDIYTemplate[0].VideoURI" target="_blank">@Model.newDIYTemplate[0].VideoURI</a>  </span>

                                                    </td>
                                                    <td class="text-center">
                                                        @if (Model.newDIYTemplate[0].VideoStatus == "A")
                                                        {<a href="javascript:void(0);" style="cursor:default" class="badge badge-success badge-pill" data-placement="auto" title="" name="@Model.newDIYTemplate[0].VideoId">Active</a>}
                                                        else
                                                        { <a href="javascript:void(0);" style="cursor:default" class="badge badge-danger badge-pill" data-placement="auto" title="" name="@Model.newDIYTemplate[0].VideoId">Inactive</a>}
                                                    </td>

                                                    <td>
                                                        <a style="cursor:pointer;"><i class='fal fa-edit' id="0" onclick="EditVideo($(this))"></i></a>
                                                    </td>
                                                </tr>

                                            </tbody>
                                        </table>
                                        <table id="dt-diy" class="table table-bordered table-hover table-striped w-100" role="grid" aria-describedby="dt-basic_info">
                                            <thead>
                                                <tr>
                                                    <td id="slno" class="text-center fw-500">Sl. No</td>
                                                    <td class="text-center fw-500">Video ID</td>
                                                    <td class="text-center fw-500">Video Language</td>
                                                    <td class="text-center fw-500">Video Name</td>
                                                    <td class="text-center fw-500">Video Description</td>
                                                    <td class="text-center fw-500">Video Type</td>
                                                    <td class="text-center fw-500">Video Location</td>
                                                    <td class="text-center fw-500">Video Status</td>
                                                    <td class="text-center fw-500">Edit</td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int i = 0; i < Model.newDIY.Count; i++)
                                                {
                                                    var j = i + 1;
                                                    var VideoURI1 = @Model.newDIY[i].VideoURI.Split('/');
                                                    var videofilename = VideoURI1[VideoURI1.Length - 1];

                                                    <tr class="contacts-record">
                                                        <td>@j</td>
                                                        <td>
                                                            @Html.HiddenFor(m => m.newDIY[i].ID)
                                                            @Html.HiddenFor(m => m.newDIY[i].VideoStatus)
                                                            @Html.HiddenFor(m => m.newDIY[i].VideoId)
                                                            <span>@Model.newDIY[i].VideoId </span>
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(m => m.newDIY[i].LanguageName)
                                                            @Html.HiddenFor(m => m.newDIY[i].LanguageID)
                                                            <span>@Model.newDIY[i].LanguageName </span>
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(m => m.newDIY[i].VideoName)
                                                            <span>@Model.newDIY[i].VideoName </span>
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(m => m.newDIY[i].VideoDescription)
                                                            <span>@Model.newDIY[i].VideoDescription </span>
                                                        </td>
                                                        <td class="text-center">
                                                            @Html.HiddenFor(m => m.newDIY[i].VideoTypeDescription)
                                                            @Html.HiddenFor(m => m.newDIY[i].VideoType)
                                                            <span>@Model.newDIY[i].VideoTypeDescription </span>
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(m => m.newDIY[i].VideoURI)
                                                            <span><a href="@Model.newDIY[i].VideoURI" target="_blank">@videofilename</a>  </span>
                                                        </td>
                                                        <td class="text-center">
                                                            @if (Model.newDIY[i].VideoStatus == "A")
                                                            {<a href="javascript:void(0);" style="cursor:default" class="badge badge-success badge-pill" data-placement="auto" title="" name="@Model.newDIY[i].VideoId">Active</a>}
                                                            else
                                                            { <a href="javascript:void(0);" style="cursor:default" class="badge badge-danger badge-pill" data-placement="auto" title="" name="@Model.newDIY[i].VideoId">Inactive</a>}
                                                        </td>

                                                        <td>
                                                            <a style="cursor:pointer;"><i class='fal fa-edit' id="@i" onclick="EditVideo($(this))"></i></a>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 mr-5 float-right">
                                <button type="submit" value="Submit" class="btn btn-primary" id="NewTipSubmit" name="NewTipSubmit">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script>
        var EditvideoId;
        var dt;
        $(document).ready(function () {

            //activating menu li
            $('#Add_DIY').parent().parent().addClass('active open');
            $('#Add_DIY').addClass('active');
            var AngleElm = $('.open .fa-angle-down');
            AngleElm.removeClass('fa-angle-down');
            AngleElm.addClass('fa-angle-up');

            //$("#TipCategoryFilterList").multiselect('enable');
            //$('#ApplicableLanguage').multiselect('refresh');

            $('#video_area').hide();
            if ($('#TipCategoryFilterList').val() > 0) {
                //$('#video_area').show();
                //$('#btn_create_videoID').addClass('disabled');
                //$('#btnAddVideo').show();
                $("#TipCategoryFilterList").attr("disabled","disabled");
                //$('#ApplicableLanguage').multiselect('refresh');
            }


            //Multi-Select plugin
            //$('.custom-select').multiselect({
            //    buttonWidth: '100%',
            //    enableClickableOptGroups: true,
            //    includeSelectAllOption: true,
            //    //enableFiltering: true
            //    buttonText: function (options, select) {
            //        if (options.length === 0) {
            //            return 'No Language selected';
            //        }
            //        else if (options.length > 3) {
            //            return 'More than 3 Languages selected!';
            //        }
            //        else {
            //            var labels = [];
            //            options.each(function () {
            //                if ($(this).attr('label') !== undefined) {
            //                    labels.push($(this).attr('label'));
            //                }
            //                else {
            //                    labels.push($(this).html());
            //                }
            //            });
            //            return labels.join(', ') + '';
            //        }
            //    }
            //});




            $('#TipCategoryFilterList').multiselect({
                buttonWidth: '100%'
            });
            $('#LanguageFilterList').multiselect({
                buttonWidth: '100%'
            });

            $('#VideoType').multiselect({
                buttonWidth: '100%'
            });
            //Applicable Languages List
            $('#ApplicableLanguage').multiselect({

                buttonWidth: '100%',
                enableClickableOptGroups: true,
                includeSelectAllOption: true,
                float: 'left',
                //enableFiltering: true
                buttonText: function (options, select) {
                    debugger;

                    if (options.length === 0) {
                        return 'No Languages selected';
                    }
                    else if (options.length > 3) {
                        return 'More than 3 Languages selected!';
                    }
                    else {
                        var labels = [];
                        options.each(function () {
                            if ($(this).attr('label') !== undefined) {
                                labels.push($(this).attr('label'));
                            }
                            else {
                                labels.push($(this).html());
                            }
                        });
                        return labels.join(', ') + '';
                    }
                }
            });

            //for custom-styling
            $('button.multiselect').each(function () {
                $(this).addClass('custom-select');
            });



            //on click of Create Video ID button
            $('#btn_create_videoID').click(function () {
                debugger;
                //swal({
                //    title: "Are you sure?",
                //    text: "You want to Generate Video Id!",
                //    type: "warning",
                //    showCancelButton: true,
                //    confirmButtonColor: '#DD6B55',
                //    confirmButtonText: 'Yes, I am sure!',
                //    cancelButtonText: "No, cancel it!",
                //    closeOnConfirm: false,
                //    closeOnCancel: false
                //},
                //    function (isConfirm) {

                //        if (isConfirm) {
                //            GenerateVideoID($('#TipCategoryFilterList').val());

                //        }
                //    });
                GenerateVideoID($('#TipCategoryFilterList').val());
                return false;
            });


            $('#btnAddVideo').click(function () {
                debugger;
                //swal({
                //    title: "Are you sure?",
                //    text: "You want to Generate Video Id!",
                //    type: "warning",
                //    showCancelButton: true,
                //    confirmButtonColor: '#DD6B55',
                //    confirmButtonText: 'Yes, I am sure!',
                //    cancelButtonText: "No, cancel it!",
                //    closeOnConfirm: false,
                //    closeOnCancel: false
                //},
                //    function (isConfirm) {

                //        if (isConfirm) {
                //            GenerateVideoID($('#TipCategoryFilterList').val());

                //        }
                //    });
                var videoupdate = false;
                if ($('#VideoID').val() > 0) {
                    videoupdate = true;
                }
                else {
                videoupdate = GenerateVideoID($('#TipCategoryFilterList').val())
                }

                return videoupdate;
            });


            //on click of add for Video Language
            $('#btn_create_videoLanguage').click(function () {


                return false;
            });

            $('<div class="invalid-feedback">Language is required.</div>').insertAfter('.DIY-Language .btn-group');

            var table = $('#dt-diy').DataTable({
                responsive: true,
                dom:
                    /*	--- Layout Structure
                        --- Options
                        l	-	length changing input control
                        f	-	filtering input
                        t	-	The table!
                        i	-	Table information summary
                        p	-	pagination control
                        r	-	processing display element
                        B	-	buttons
                        R	-	ColReorder
                        S	-	Select

                        --- Markup
                        < and >				- div element
                        <"class" and >		- div with a class
                        <"#id" and >		- div with an ID
                        <"#id.class" and >	- div with an ID and a class

                        --- Further reading
                        https://datatables.net/reference/option/dom
                        --------------------------------------
                     */
                    "<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    {
                        //extend: 'colvis',
                        //text: 'Column Visibility',
                        //titleAttr: 'Col visibility',
                        //className: 'btn-outline-default'
                    }

                ],
                columnDefs: [
                    {
                        targets: 0,
                        className: 'text-center'
                    },
                    {
                        targets: 1,
                        className: 'text-center'
                    },
                    {
                        targets: 2,
                        className: 'text-center'
                    },
                    {
                        targets: 6,
                        className: 'text-center'
                    },
                    {
                        targets: 7,
                        className: 'text-center'
                    }
                ]
            });
            dt = $('#dt-diy').dataTable().api();

            //on click of add button in modal
            $('#btn-add').click(function () {

                var Isupdate = $(this)[0].textContent;
                $(this).removeAttr("data-dismiss");

                var validateinput = true;
                debugger;

                var VideoType = $('#VideoType').val();

                if (ValidateVideo('#Video-Name') == false) {
                    validateinput = false;
                }
                if (ValidateVideo('#Video-Description') == false) {
                    validateinput = false;
                }
                //if (ValidateVideo('#VideoURI') == false) {
                    var input = $('#VideoURI');

                    debugger;

                    if ((input.val() === '' || input.val() == 0) && VideoType == 2) {
                        input.removeClass('is-valid');
                        input.addClass('is-invalid');
                        validateinput = false;
                    }
                    else {
                        input.removeClass('is-invalid');
                        input.addClass('is-valid');
                        //validateinput = true;
                    }
                //}
                //if (ValidateVideo('#Video-File') == false) {
                     var input = $('#lblvideo');

                    debugger;

                if ((input.html() === '' || input.html() =='Choose Video' ) && VideoType==1) {
                        input.removeClass('is-valid');
                        input.addClass('is-invalid');
                        validateinput = false;
                    }
                    else {
                        input.removeClass('is-invalid');
                        input.addClass('is-valid');
                        //validateinput= true;
                    }

                    //validateinput = false;
                //}
                debugger;
                //if (ValidateVideo('#ApplicableLanguage') == false) {
                    var input = $('#ApplicableLanguage');

                    debugger;

                    if ((input.val() === '' || input.val() == 0) && Isupdate == 'Add') {
                        input.removeClass('is-valid');
                        input.addClass('is-invalid');
                        validateinput = false;
                    }
                    else {
                        input.removeClass('is-invalid');
                        input.addClass('is-valid');
                        //validateinput = true;
                    }
                //}


                debugger;
                if (validateinput == true) {
                    SaveDIYVideo($(this), table, EditvideoId, $('#btn-add').text());
                    //$("#AddNewDIY_ForLanguage").modal("hide");

                    //$('.modal').removeClass('in');
                    //$('.modal').attr("aria-hidden", "true");
                    //$('.modal').css("display", "none");
                    //$('.modal-backdrop').remove();
                    //$('body').removeClass('modal-open');
                    //data - dismiss="modal"
                    $(this).attr("data-dismiss", "modal");
                }



                //iterate against each selected language
                //$("select[id^='ApplicableLanguage']").children('option:selected').each(function () {
                //    alert($(this).text());

                //    var slno = parseFloat(table
                //        .column('#slno')
                //        .data()
                //        .sort()
                //        .reverse()[0]) + 1;
                //    var videoID = $('#VideoID').val();
                //    var videoLanguage = "<input id='newDIY_LanguageID' name='newDIY.LanguageID' type='hidden' value='" + $(this).val() +"'><span>" + $(this).text() + "</span>";
                //    var videoName = "<input id='newDIY_VideoName' name='newDIY.VideoName' type='hidden' value='" + $('#Video-Name').val() + "'><span>" + $('#Video-Name').val() + "</span>";
                //    var videoDescription = "<input id='newDIY_VideoDescription' name='newDIY.VideoDescription' type='hidden' value='" + $('#Video-Description').val() + "'><span>" + $('#Video-Description').val() + "</span>";
                //    var videoLocation = "<input id='newDIY_VideoURI' name='newDIY.VideoURI' type='hidden' value='" + $('#Video-Name').val() + "'><span>" + $('#VideoURI').val() + "</span>";
                //    var videoStatus = "<span class='badge badge-success badge-pill'>Active</span>";
                //    var edit = "<a style='cursor:pointer;'><i class='fal fa-edit'></i></a>";


                //    table.row.add([
                //        slno,
                //        videoID,
                //        videoLanguage,
                //        videoName,
                //        videoDescription,
                //        videoLocation,
                //        videoStatus,
                //        edit
                //    ]).draw(false);

                //});


                //clearModalData();

            });






            function GenerateVideoID(CategoryID) {
                var validateinput = true;
                if (ValidateVideo('#TipCategoryFilterList') == false) {
                    validateinput = false;
                }

                if (validateinput == true) {
                    $("#videoCategory").attr('style', 'display: none');

                    $.post('GenerateVideoID', {
                        CategoryID: CategoryID
                    })
                        .done(function (data) {
                            console.log(data);
                            if (data != null) {
                                //$('#video_area').show();
                                $('#btnAddVideo').show();
                                $('#VideoID').val(data.diyId);
                                $('#modal_VID').val(data.diyId);
                                $('#btn_create_videoID').addClass('disabled');
                            }
                            else {
                            }
                        })
                        .fail(function (result) {

                        })
                }
                else {
                    $("#videoCategory").attr('style', 'display: contents');
                }

                return validateinput;
                //else {
                //    alert('Please select Category!');
                //}
            }

        });

        function EditVideo(Id) {
            debugger;


            $("input[name='VideoStatus']")[0].disabled = false;
            $("input[name='VideoStatus']")[1].disabled = false;

            var index = $(Id)[0].id;
            var videoName = $(Id).closest('tr').find('#newDIY_' + index + '__VideoName').val();
            var VideoDescription = $(Id).closest('tr').find('#newDIY_' + index + '__VideoDescription').val();
            var selectedlanguage = $(Id).closest('tr').find('#newDIY_' + index + '__LanguageID').val();
            var VideoURI = $(Id).closest('tr').find('#newDIY_' + index + '__VideoURI').val();
            var VideoType = $(Id).closest('tr').find('#newDIY_' + index + '__VideoType').val();
            //var selectedlanguage1 = [];
            //selectedlanguage1.push(1);

            var VideoStatus = $(Id).closest('tr').find('#newDIY_' + index + '__VideoStatus').val();

            if (VideoStatus == "A") {
                $("input[name='VideoStatus']")[0].checked = true
            }
            else {
                $("input[name='VideoStatus']")[1].checked = true
            }


            var UserManualLangArray = [];
            var UserManualLangIDArray = [selectedlanguage];

            $.each(UserManualLangIDArray, function () {
                debugger;
                UserManualLangArray.push(this);
            });
            debugger;
            $("#ApplicableLanguage").val(UserManualLangArray);

            $('#ApplicableLanguage').multiselect('refresh');
            //$("select.multiselect").multiselect("refresh");


            ////Applicable Languages List
            //$('#ApplicableLanguage').multiselect({
            //    buttonWidth: '100%',
            //    enableClickableOptGroups: true,
            //    includeSelectAllOption: true,
            //    float: 'left',
            //    //enableFiltering: true
            //    buttonText: function (options, select) {
            //        //debugger;

            //        if (options.length === 0) {
            //            return 'No Languages selected';
            //        }
            //        else if (options.length > 3) {
            //            return 'More than 3 Languages selected!';
            //        }
            //        else {
            //            var labels = [];
            //            options.each(function () {
            //                if ($(this).attr('label') !== undefined) {
            //                    labels.push($(this).attr('label'));
            //                }
            //                else {
            //                    labels.push($(this).html());
            //                }
            //            });
            //            return labels.join(', ') + '';
            //        }
            //    }
            //});

            $("select[id^='ApplicableLanguage']").children('option').each(function () {
                $("#ApplicableLanguage option[value='" + $(this).val() + "']").prop("disabled", true);
                $("#ApplicableLanguage").multiselect('refresh');
            });

            //$('#ApplicableLanguage').val(selectedlanguage1);
            //$('#ApplicableLanguage').attr("disabled", true);

            $('#Video-Name').val(videoName);
            $('#Video-Description').val(VideoDescription);
            $('#VideoURI').val(VideoURI);
            //$('#VideoType').val(VideoType);

            var VideoURI1 = VideoURI.split('/');
            var videofilename = VideoURI1[VideoURI1.length - 1];
            $('#lblvideo').html(videofilename);

            $("#VideoType option[value='" + VideoType + "']").prop("selected", true);
            $("#VideoType").multiselect('refresh');

            VideoTypeChange(VideoType);
            //$('#VideoID').val($('#modal_VID'))
            $('#modal_VID').val($('#VideoID').val());
            $('#btn-add').html('Update');
            //$('#EditVideoId').val(Id);
            EditvideoId = Id
            $('#AddNewDIY_ForLanguage').modal({ show: true });

        }
        function SaveDIYVideo(Id, table,EditvideoId,btnupdate) {
            debugger;

            var IsUpdate = 0;
            var LanguageId = 0;
            var VideoURL = "";
            //var User = {};

            var index = 0;
            if (btnupdate == 'Update') {
                index = $(EditvideoId)[0].id;
            }

            if ($('#VideoType').val() == 2) {
                VideoURL = $('#VideoURI').val();
            }
            else {
                VideoURL = "";
            }

            if ($("#Video-File").get(0).files[0] == undefined) {
                VideoURL = $('#VideoURI').val();
            }

            var slno = parseFloat(table
                .column('#slno')
                .data()
                .sort()
                .reverse()[0]) + 1;

            debugger;
            if (btnupdate == 'Add') {
                IsUpdate = 0;
                LanguageId = 0;
            }
            else {
                IsUpdate = 1;
                LanguageId = $('#ApplicableLanguage option:selected').val();
            }

            var fileData = new FormData();
               fileData.append("#Video-File", $("#Video-File").get(0).files[0]);
               fileData.append("VideoId", $('#VideoID').val());
               //fileData.append("OrderId", slno);
               fileData.append("IsUpdate", IsUpdate);
               fileData.append("LanguageId", LanguageId);
            fileData.append("VideoURL", VideoURL);



            $.ajax({
                //url: '/Users/SaveImage',
                url: '@Url.Action("SaveDiYVideo", "DIY")',
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (result) {
                    //alert('success');
                    debugger;
                    
                    $('#VideoURI').val(result.videoURL);
                    $("select[id^='ApplicableLanguage']").children('option:selected').each(function () {
                        //alert($(this).text());
                        debugger;
                        //var slno = parseFloat(table
                        //    .column('#slno')
                        //    .data()
                        //    .sort()
                        //    .reverse()[0]) + 1;

                        debugger;
                        if (btnupdate == 'Add') {
                            if ($(this)[0].disabled == false) {
                                var videoID = $('#VideoID').val();
                                debugger;
                                var videoLanguage = "<input id='newDIY_LanguageID' name='newDIY.LanguageID' type='hidden' value='" + $(this).val() + "'><span>" + $(this).text() + "</span>";
                                var videoName = "<input id='newDIY_VideoName' name='newDIY.VideoName' type='hidden' value='" + $('#Video-Name').val() + "'><span>" + $('#Video-Name').val() + "</span>";
                                var videoDescription = "<input id='newDIY_VideoDescription' name='newDIY.VideoDescription' type='hidden' value='" + $('#Video-Description').val() + "'><span>" + $('#Video-Description').val() + "</span>";

                                var videoType = "<input id='newDIY_VideoType' name='newDIY.VideoType' type='hidden' value='" + $('#VideoType').val() + "'><span>" + $('#VideoType option:selected').text() + "</span>";

                                var videoLocation = "<input id='newDIY_VideoURI' name='newDIY.VideoURI' type='hidden' value='" + $('#VideoURI').val() + "'><span>" + $('#VideoURI').val() + "</span>";
                                var videoStatus = "<span class='badge badge-success badge-pill'>Active</span>";
                                var edit = "<a style='cursor:pointer;'><i class='fal fa-edit' onclick='EditVideo($(this))'></i></a>";


                                var LanguageName = $(this).text();
                                var VideoName = $('#Video-Name').val();
                                var videoDescripton = $('#Video-Description').val();
                                var videoTypeDescripton = $('#VideoType option:selected').text();
                                var LanguageId = $(this).val();
                                var VideoTypeId = $('#VideoType').val();
                                var VideoURI = $('#VideoURI').val();
                                //table.row.add([
                                //    slno,
                                //    videoID,
                                //    videoLanguage,
                                //    videoName,
                                //    videoDescription,
                                //    videoType,
                                //    videoLocation,
                                //    videoStatus,
                                //    edit
                                //]).draw(false);

                                tabname = '#dt-diy';
                                tabclass = 'newDIY';



                                var count = $(tabname + " tr.contacts-record").length;
                                var rowcount = $(tabname + " tr.contacts-record:visible").length;

                                var template = $('#dt-diytemplate .contacts-record-template').clone();

                                //template.find('select').val(0);
                                //template.find('input[type=text]').val(null);

                                $.each(template.find('input[type=text]'), function () {
                                    debugger;
                                    var name = $(this).attr('name');
                                    name = name.replace('newDIYTemplate[0]', tabclass + '[' + count + ']');
                                    $(this).attr('name', name);
                                });
                                $.each(template.find('td i'), function () {
                                    debugger;

                                    $(this)[0].id = count;
                                });
                                $.each(template.find('select,input'), function () {
                                    debugger;
                                    var name = $(this).attr('name');




                                    name = name.replace('newDIYTemplate[0]', tabclass + '[' + count + ']');
                                    id = $(this).attr('id');
                                    id = id.replace("newDIYTemplate_0__", "newDIY_" + count + "__");
                                    $(this).attr('name', name);

                                    if ($(this)[0].id == "newDIYTemplate_0__LanguageName") {
                                        debugger;
                                        $(this).val(LanguageName);
                                        $($(this)).closest('td').find('span').html(LanguageName);
                                    }
                                    if ($(this)[0].id == "newDIYTemplate_0__VideoName") {
                                        debugger;
                                        $(this).val(VideoName);
                                        $($(this)).closest('td').find('span').html(VideoName);
                                    }
                                    if ($(this)[0].id == "newDIYTemplate_0__VideoDescription") {
                                        debugger;
                                        $(this).val(videoDescripton);
                                        $($(this)).closest('td').find('span').html(videoDescripton);
                                    }

                                    if ($(this)[0].id == "newDIYTemplate_0__VideoTypeDescription") {
                                        debugger;
                                        $(this).val(videoTypeDescripton);
                                        $($(this)).closest('td').find('span').html(videoTypeDescripton);
                                    }
                                    if ($(this)[0].id == "newDIYTemplate_0__VideoURI") {
                                    debugger;
                                        $(this).val(VideoURI);

                                        var VideoURI1 = VideoURI.split('/');
                                        var videofilename = VideoURI1[VideoURI1.length - 1];


                                        var videourihtml = '<a href="' + VideoURI + '" target="_blank">' + videofilename+'</a>'

                                        $($(this)).closest('td').find('span').html(videourihtml);
                                    }
                                    if ($(this)[0].id == "newDIYTemplate_0__VideoId" ) {
                                        debugger;
                                        $(this).val(videoID);
                                        $($(this)).closest('td').find('span').html(videoID);
                                    }
                                    if ( $(this)[0].id == "newDIYTemplate_0__LanguageID" ) {
                                        debugger;
                                        $(this).val(LanguageId);
                                        //$($(this)).closest('td').find('span').html(LanguageId);
                                    }
                                    if ($(this)[0].id == "newDIYTemplate_0__VideoType") {
                                        debugger;
                                        $(this).val(VideoTypeId);
                                        //$($(this)).closest('td').find('span').html(VideoTypeId);
                                    }


                                    $(this).attr('id', id);



                                });


                                var Sno = 0;
                                $.each(template.find('td'), function () {
                                    debugger;
                                    if (Sno == 0) {
                                        //$(this)[0].outerText = count + 1;
                                        var tdvalue = count + 1;
                                        $(this).html(tdvalue);
                                    }
                                    Sno = Sno + 1;
                                    //if ($(this)[0].contains(">0</td>") == true) {
                                    //    //debugger;
                                    //    //$(this)[0].outerText = count + 1;
                                    //}


                                });



                                
                                $(tabname).append(template);
                                //template.removeClass(tabname +' contacts-record-template')
                                template.removeClass('#dt-diytemplate .contacts-record-template')
                                    .addClass(tabname + ' contacts-record').show();

                                debugger;
                                dt.row.add(template);
                                dt.draw();


                                debugger;

                                //$("#ApplicableLanguage option['value=1']").attr("disabled", "disabled");
                                $("#ApplicableLanguage option[value='" + $(this).val() + "']").prop("disabled", true);
                                //$('#ApplicableLanguage option:not(:selected)').attr('disabled', true);
                                $("#ApplicableLanguage").multiselect('refresh');
                            }
                        }
                        else {
                            debugger;
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoName').val($('#Video-Name').val());
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoName').closest('td').find('span').html($('#Video-Name').val());
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoDescription').val($('#Video-Description').val());
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoDescription').closest('td').find('span').html($('#Video-Description').val());
                           // $(EditvideoId).closest('tr').find('#newDIYTemplate_0__LanguageID').val($('#ApplicableLanguage').val());
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoType').val($('#VideoType').val());
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoTypeDescription').val($('#VideoType option:selected').text());
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoTypeDescription').closest('td').find('span').html($('#VideoType option:selected').text() )
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoURI').val($('#VideoURI').val());
                            $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoURI').closest('td').find('span').html($('#VideoURI').val());

                            if ($("input[name='VideoStatus']:checked").val() == true || $("input[name='VideoStatus']:checked").val() == "true") {
                                $(EditvideoId).closest('tr').find('.badge-pill').text("Active")
                                $(EditvideoId).closest('tr').find('.badge-pill').removeClass('badge-danger');
                                $(EditvideoId).closest('tr').find('.badge-pill').addClass('badge-success');
                                $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoStatus').val("A");

                            }
                            else {
                                $(EditvideoId).closest('tr').find('.badge-pill').text("Inactive")
                                $(EditvideoId).closest('tr').find('.badge-pill').removeClass('badge-success');
                                $(EditvideoId).closest('tr').find('.badge-pill').addClass('badge-danger');
                                $(EditvideoId).closest('tr').find('#newDIY_' + index + '__VideoStatus').val("I");
                            }

                            //$("#ApplicableLanguage option['value=1']").attr("disabled", "disabled");
                            $("#ApplicableLanguage option[value='" + $(this).val() + "']").prop("disabled", true);
                            //$('#ApplicableLanguage option:not(:selected)').attr('disabled', true);
                            $("#ApplicableLanguage").multiselect('refresh');
                        }




                    });






                    clearModalData();
                },
                error: function (err) {
                    //alert('error');
                    console.log(err.responseText);
                }
            });
        }

        function clearModalData() {
            debugger;
            $("#ApplicableLanguage").multiselect("clearSelection");

            //$('#AddNewDIY_ForLanguage').find('input').each(function () {
            //    if ($(this).attr(id) == 'modal_VID') {

            //    }
            //    else {
            //        $(this).val('');
            //    }
            //});
        }

        function AddVideo() {
            //$("select[id^='ApplicableLanguage']").children('option:selected').each(function () {
            //    alert("test");
            //});
            $("input[name='VideoStatus']")[0].checked = true
            $("input[name='VideoStatus']")[0].disabled = true
            $("input[name='VideoStatus']")[1].disabled = true

            debugger;
            //$("input[name='VideoStatus']:checked").val()=true;
                //$("input[name='VideoStatus']").val() = true;
                //$("input[name='VideoStatus']")

            $('#btn-add').html('Add');
            $("select[id^='ApplicableLanguage']").children('option').each(function () {
                //alert("applicablelang");
                $("#ApplicableLanguage option[value='" + $(this).val() + "']").prop("disabled", false);
                $("#ApplicableLanguage option[value='" + $(this).val() + "']").prop("selected", false);
                $("#ApplicableLanguage").multiselect('refresh');
            });

            var template = $('#dt-diy');
            $.each(template.find("input[name*='].LanguageID']"), function () {
                debugger;
                //alert("newDIY_LanguageID");
                $("#ApplicableLanguage option[value='" + $(this).val() + "']").prop("disabled", true);
                $("#ApplicableLanguage").multiselect('refresh');
            });
            $('#modal_VID').val($('#VideoID').val());
            $('#Video-Name').val('');
            $('#VideoURI').val('');
            $('#Video-Description').val('');
            $('#lblvideo').html('Choose Video');
            $("#Video-File").val('').clone(true);
        }

        function VideoTypeChange(val) {
            debugger;
            $('#Video-Browse').hide();
            $('#Video-URI').hide();

            if (val == 1) {
                $('#Video-Browse').show();
            }
            else if (val == 2) {
                $('#Video-URI').show();
            }



        }

        function ValidateVideo(Id) {
            var input = $(Id);

            debugger;

            if (input.val() === '' || input.val() == 0) {
                input.removeClass('is-valid');
                input.addClass('is-invalid');
                return false;
            }
            else {
                input.removeClass('is-invalid');
                input.addClass('is-valid');
                return true;
            }



            //}
        }
    </script>

}